// Variables and mixins
@import './utils/_utils';

// Vendors
@import './vendor/bootstrap/bootstrap';

// Base
@import './base/reset';
@import './base/body';
@import './base/text';
@import './base/forms';
@import './base/flex';

// Components
@import './components/board-tabs';
@import './components/full-screen';
@import './components/btn';
@import './components/mini-map';
@import './components/row';
@import './components/empty-notice';
@import './components/n-pop';
@import './components/list-item';

// TODO: Look at making prefers-color-scheme work properly - when enabled, only buttons change
// @media (prefers-color-scheme: dark) {
// 	@include darkmode();
// }

.input-model {
	&.type-range {
		.keypad-holder {
			display: none;
		}
	}
	&.type-value {
		.tracker-input.slider {
			display: none;
		}
	}
}

.container-sm {
	max-width: 800px;
}

.click-thru {
	display: block;
	width: 100%;
	border: none;
	background: none;
	-webkit-appearance: none;
	padding: 0;
	margin: 0;
}

.delete-on-app {
	transition: all 0.3s ease-in-out;
	&.deleted {
		transition: all 0.3s ease-in-out;
		opacity: 0;
		transform: scale(1.5);

		.version {
			bottom: 1000px;
			opacity: 0;
		}
		svg {
			transition: all 0.3s ease-in-out;
			transform: scale(2);
		}
	}
}

.loading-screen {
	background-color: $primaryBright;
	background-size: cover;
	background-position: center;
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	z-index: 4000;
	display: flex;
	align-items: center;
	justify-content: center;

	svg {
		transition: all 0.3s ease-in-out;
	}
}
.version {
	position: absolute;
	width: 100px;
	bottom: 100px;
	font-size: 12px;
	color: rgba(255, 255, 255, 0.5);
	margin-left: -50px;
	left: 50%;
	background-color: rgba(0, 0, 0, 0.1);
	border-radius: 12px;
	height: 24px;
	line-height: 24px;
	padding: 0 12px;
	text-align: center;
}

.n-item.bg-light {
	background-color: var(--color-bg) !important;
	&.text-faded {
		color: var(--color-inverse-3) !important;
	}
}

.n-title {
	flex-direction: column;
	font-size: 1.2rem !important;
	font-weight: 700 !important;
	color: var(--color-inverse);
	line-height: 120%;
	margin: 0;
	small {
		display: block;
		font-size: 0.75rem;
		line-height: 0.75rem;
		opacity: 0.8;
	}
}

$morning-alt: #fe8300;
$morning: rgb(255, 204, 0);

$afternoon-alt: rgb(0, 255, 21);
$afternoon: rgb(0, 166, 255);

$evening-alt: rgb(62, 9, 252);
$evening: rgb(145, 25, 220);

$night-alt: #c3727c;
$night: #311f62;

.glow {
	&.glow-morning {
		box-shadow: 0px 2px 24px -10px rgba($morning, 0.2), 0px 3px 10px -2px rgba($morning-alt, 0.1) !important;
	}
	&.glow-afternoon {
		box-shadow: 0px 2px 24px -10px rgba($afternoon, 0.1), 0px 3px 10px -2px rgba($afternoon-alt, 0.1) !important;
	}
	&.glow-evening {
		box-shadow: 0px 2px 24px -10px rgba($evening, 0.1), 0px 3px 10px -2px rgba($evening-alt, 0.1) !important;
	}
	&.glow-night {
		box-shadow: 0px 2px 24px -10px rgba($night, 0.2), 0px 3px 10px -2px rgba($night-alt, 0.2) !important;
	}
}

.card {
	border-radius: 1rem;
}

.mw-500px {
	max-width: 500px !important;
}

nav {
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	height: 40px;
	background-color: rgba(0, 0, 0, 0.1);
	display: flex;
	align-items: center;
	width: 100%;
}

.main-content {
	z-index: 0;
	flex-grow: 1;
	flex-shrink: 1;
	min-height: calc(100vh - 50px) !important;
	display: flex;
	width: 100%;
	margin-bottom: 50px;
	// background-color: var(--color-bg);
	// background-color: red !important;
}

.clickable,
[clickable] {
	position: relative;
	cursor: pointer;
	touch-action: manipulation;
}
.clickable:hover,
.clickable:focus {
	background-color: rgba($primaryBright, 0.09);
}
.btn,
a,
input,
header,
footer,
button {
	touch-action: manipulation;
}
.filler {
	flex-grow: 1;
	flex-shrink: 1;
	max-width: 100%;
	min-width: 0;
}

.justify-content-between {
	justify-content: space-between;
}

.page {
	flex-grow: 1;
	background-color: var(--color-bg);
	&.with-header {
		padding-top: 50px;
	}
	&.with-sub-header {
		padding-top: 100px;
	}
}

@keyframes keyframes1 {
	0% {
		transform: rotate(-1.2deg);
		animation-timing-function: ease-in-out;
	}
	50% {
		transform: rotate(1.7deg);
		animation-timing-function: ease-in-out;
	}
}

@keyframes keyframes2 {
	0% {
		transform: rotate(1.2deg);
		animation-timing-function: ease-in-out;
	}
	50% {
		transform: rotate(-1.7deg);
		animation-timing-function: ease-in-out;
	}
}

.wiggle {
	animation: keyframes2 infinite 0.6s ease-out;
	transform-origin: 50% 10%;
}
.wiggle-other {
	animation: keyframes1 infinite 0.6s ease-in;
	transform-origin: 30% 5%;
}
