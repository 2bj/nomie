// Variables and mixins
@import "./utils/_utils";

// Vendors
@import "./vendor/bootstrap/bootstrap";

// Base
@import "./base/reset";
@import "./base/body";
@import "./base/text";
@import "./base/forms";
@import "./base/flex";
@import "./base/animate";
@import "./base/opacity";
@import "./base/clickable";

// Components
@import "./components/board-tabs";
@import "./components/full-screen";
@import "./components/btn";
@import "./components/mini-map";
@import "./components/row";
@import "./components/empty-notice";
@import "./components/n-pop";
@import "./components/list-item";
@import "./components/tracker-input-modal";
@import "./components/tracker-button";
@import "./components/share-image";
@import "./components/grid";
@import "./components/app-panel";
@import "./components/item-ball";
@import "./components/toolbar-grid";
@import "./components/n-log-item";
@import "./components/badge";

/**
THIS STUFF BELOW SHOULD NOT BE HERE - IT SHOULD BE ORGANIZED 
TODO: Organize main into components or containers. 
**/

.input-model {
  flex-grow: 1;
  height: 100%;
  &.type-range {
    .keypad-holder {
      display: none;
    }
  }
  &.type-value {
    .tracker-input.slider {
      display: none;
    }
  }
}

.text-underline {
  text-decoration: underline !important;
}

.autocomplete-results.scroller {
  max-height: 48px;
  overflow: scroll;
  .tracker-list {
    margin-top: 0px;
    margin-bottom: 2px;
    max-height: 40px;
    display: flex;
    flex-wrap: nowrap !important;
    width: fit-content;
  }
}

.position-relative {
  position: relative;
}

.mock-card-animation {
  z-index: 3000;
  background-color: var(--color-solid);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 1.2rem;
  box-shadow: var(--box-shadow-float);
}

.mock-header {
  height: 20px;
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;
  background-color: var(--color-solid);
  box-shadow: 0px -10px 10px rgba(0, 0, 0, 0.3);
  margin-top: 8pt;
  margin-bottom: -16pt;
  pointer-events: none;
  &:first-child {
    display: none;
  }
  span {
    display: none;
  }
}

#photo-holder {
  position: fixed;
  bottom: -220px;
  left: 20px;
  width: 100px;
  height: 100px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  // z-index: 3000;
  img {
    position: relative;
  }
  &[data-orientation="horizontal"] {
    img {
      width: auto;
      height: 100%;
    }
  }
  &[data-orientation="vertical"] {
    img {
      height: auto;
      width: 100%;
    }
  }
  &[data-orientation="square"] {
    img {
      width: 100%;
      height: 100%;
    }
  }
}

.container-sm {
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
}
.container-xs {
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
}

.click-thru {
  display: block;
  width: 100%;
  border: none;
  background: none;
  -webkit-appearance: none;
  padding: 0;
  margin: 0;
}

.pointer {
  cursor: pointer;
}

.gap {
  height: 16px;
}

// HACK! This isn't working in the component
.library-modal .n-modal-body {
  background-color: var(--color-bg) !important;
}

.delete-on-app {
  transition: all 1s ease-in-out;
  .version {
    background-color: rgba(255, 255, 255, 0.5);
    color: var(--color-primary);
    font-weight: bold;
    z-index: 3000;
  }

  &.deleted {
    transition: all 0.5s ease-in-out;
    opacity: 0;
    transform: scale(1.7);

    .version {
      bottom: 1000px;
      opacity: 0;
    }
    svg {
      // transition: all 0.3s ease-in-out;
      // transform: scale(2);
    }
  }
}

.align-top {
  align-items: flex-start;
}

.loading-screen {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 4000;
  display: flex;
  align-items: center;
  justify-content: center;

  &.deleted {
  }

  &:before {
    transition: all 0.5s ease-in-out;
    content: "";
    background-color: #fff;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 300;
  }
  &:after {
    transition: all 0.5s ease-in-out;
    content: "";
    background-image: url(/images/nomie-splash.svg);
    background-size: cover;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 400;
    background-position: center;
  }

  // svg {
  // 	transition: all 0.3s ease-in-out;
  // }
}
.version {
  position: absolute;
  width: 100px;
  bottom: 50px;
  font-size: 12px;
  color: rgba(255, 255, 255, 0.5);
  margin-left: -50px;
  left: 50%;
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: 12px;
  height: 24px;
  line-height: 24px;
  padding: 0 12px;
  text-align: center;
}

.n-item.bg-light {
  background-color: var(--color-bg) !important;
  &.text-faded {
    color: var(--color-inverse-3) !important;
  }
}

.n-title {
  flex-direction: column;
  font-size: 1.2rem !important;
  font-weight: 700 !important;
  color: var(--color-inverse);
  line-height: 120%;
  margin: 0;
  small {
    display: block;
    font-size: 0.75rem;
    line-height: 0.75rem;
    opacity: 0.8;
  }
}

$morning-alt: #fe8300;
$morning: rgb(255, 204, 0);

$afternoon-alt: rgb(0, 255, 21);
$afternoon: rgb(0, 166, 255);

$evening-alt: rgb(62, 9, 252);
$evening: rgb(145, 25, 220);

$night-alt: #c3727c;
$night: #311f62;

.glow {
  &.glow-morning {
    box-shadow: 0px 2px 24px -10px rgba($morning, 0.2), 0px 3px 10px -2px rgba($morning-alt, 0.1) !important;
  }
  &.glow-afternoon {
    box-shadow: 0px 2px 24px -10px rgba($afternoon, 0.1), 0px 3px 10px -2px rgba($afternoon-alt, 0.1) !important;
  }
  &.glow-evening {
    box-shadow: 0px 2px 24px -10px rgba($evening, 0.1), 0px 3px 10px -2px rgba($evening-alt, 0.1) !important;
  }
  &.glow-night {
    box-shadow: 0px 2px 24px -10px rgba($night, 0.2), 0px 3px 10px -2px rgba($night-alt, 0.2) !important;
  }
}

.n-toolbar {
  h1,
  h2,
  h3 {
    font-size: 1.1rem;
    margin-bottom: 0;
  }
}

.fake-link {
  border-bottom: dotted 1px var(--color-primary-bright);
  color: var(--color-primary-bright);
}

.n-toolbar-grid .btn {
  color: var(--color-inverse-1);
}

.tap-icon {
  transition: all 0.2s ease-in-out;
  z-index: 10;
  position: relative;
  font-size: 1.6rem !important;
  color: var(--color-primary-bright);
  fill: var(--color-primary-bright) !important;
  &.sm {
    font-size: 1.5rem !important;
  }
  svg {
    height: 32px;
    width: 32px;
  }
  &:focus,
  &:active {
    transform: scale(0.9) !important;
  }
}

.tap-text {
  font-weight: 500 !important;
  font-size: 1rem !important;
  color: var(--color-primary-bright) !important;
  &.sm {
    font-size: 1.5rem !important;
  }
}

.card {
  $padding: 16px;
  $footerPadding: 8px;
  border-radius: 0.5rem;
  display: flex;
  flex-direction: column;
  z-index: 120;
  .card-body {
    padding: $padding;
    min-height: 0;
  }
  .footer {
    padding: $footerPadding !important;
    button {
      margin-right: $footerPadding * 0.5 !important;
      margin-left: $footerPadding * 0.5 !important;
      &:first-child {
        margin-left: 0px !important;
      }
      &:last-child {
        margin-right: 0px !important;
      }
    }
  }
  p,
  .card-body {
    font-size: 0.9rem;
  }
  .card-title {
    $paddingTop: $padding * 0.7;
    padding: $padding;
    font-weight: bold;
    font-size: 1rem;
  }
}

.mw-500px {
  max-width: 500px !important;
}

// nav {
//   position: fixed;
//   bottom: 0;
//   left: 0;
//   right: 0;
//   height: 40px;
//   background-color: rgba(0, 0, 0, 0.1);
//   display: flex;
//   align-items: center;
//   width: 100%;
// }

.main-content {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 0;
  flex-grow: 1;
  flex-shrink: 1;
  min-height: calc(100vh - 50px) !important;
  display: flex;
  flex-direction: column;
  width: 100%;
  margin-bottom: 50px;

  // background-color: var(--color-bg);
  // background-color: red !important;
}

.btn,
a,
input,
header,
footer,
button {
  touch-action: manipulation;
}
.filler {
  flex-grow: 1;
  flex-shrink: 1;
  max-width: 100%;
  min-width: 0;
}

.justify-content-between {
  justify-content: space-between;
}

.page {
  display: flex;
  min-height: calc(100vh - 120px);
  flex-grow: 1;
  background-color: var(--color-bg);
}

.offline-notice {
  background-color: $red;
  color: #fff;
  font-size: 0.7rem;
  padding: 2px 10px;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 5000;
}
